deploying contract...
deploy tx  0x0dba07d78ef94371136dc69cd583d8b0f0a434882a5a5e81299612d9f6115454
deployed
Contract {
  interface: Interface {
    fragments: [
      [ConstructorFragment],
      [EventFragment],
      [EventFragment],
      [FunctionFragment],
      [FunctionFragment],
      [FunctionFragment],
      [FunctionFragment],
      [FunctionFragment],
      [FunctionFragment],
      [FunctionFragment]
    ],
    _abiCoder: AbiCoder { coerceFunc: null },
    functions: {
      'challange(address,bytes,bytes,bytes,uint256[2],uint256[2][2],uint256[2])': [FunctionFragment],
      'collect(bytes32,uint256,uint256,address[],uint256[2],uint256[2][2],uint256[2])': [FunctionFragment],
      'count()': [FunctionFragment],
      'keys(address)': [FunctionFragment],
      'nullifierRoot()': [FunctionFragment],
      'registerVoter(bytes32)': [FunctionFragment],
      'result()': [FunctionFragment]
    },
    errors: {},
    events: {
      'Challanged()': [EventFragment],
      'Voted(address[])': [EventFragment]
    },
    structs: {},
    deploy: ConstructorFragment {
      name: null,
      type: 'constructor',
      inputs: [Array],
      payable: false,
      stateMutability: 'nonpayable',
      gas: null,
      _isFragment: true
    },
    _isInterface: true
  },
  provider: JsonRpcProvider {
    _isProvider: true,
    _events: [],
    _emitted: {
      block: 8969203,
      't:0x0dba07d78ef94371136dc69cd583d8b0f0a434882a5a5e81299612d9f6115454': 8969203
    },
    formatter: Formatter { formats: [Object] },
    anyNetwork: false,
    _networkPromise: Promise { [Object] },
    _maxInternalBlockNumber: 8969203,
    _lastBlockNumber: 8969203,
    _pollingInterval: 4000,
    _fastQueryDate: 1626776371904,
    connection: { url: 'https://rinkeby.vocdoni.net' },
    _nextId: 68,
    _eventLoopCache: { detectNetwork: null, eth_chainId: null, eth_blockNumber: null },
    _network: {
      name: 'rinkeby',
      chainId: 4,
      ensAddress: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',
      _defaultProvider: [Function]
    },
    _internalBlockNumber: Promise { [Object] },
    _fastBlockNumber: 8969203,
    _fastBlockNumberPromise: Promise { 8969203 },
    _poller: null,
    _bootstrapPoll: null
  },
  signer: Wallet {
    _isSigner: true,
    _signingKey: [Function (anonymous)],
    _mnemonic: [Function (anonymous)],
    address: '0x3E311B4D335E3Dc1F820366c12C1baDD3e193E12',
    provider: JsonRpcProvider {
      _isProvider: true,
      _events: [],
      _emitted: [Object],
      formatter: [Formatter],
      anyNetwork: false,
      _networkPromise: [Promise],
      _maxInternalBlockNumber: 8969203,
      _lastBlockNumber: 8969203,
      _pollingInterval: 4000,
      _fastQueryDate: 1626776371904,
      connection: [Object],
      _nextId: 68,
      _eventLoopCache: [Object],
      _network: [Object],
      _internalBlockNumber: [Promise],
      _fastBlockNumber: 8969203,
      _fastBlockNumberPromise: [Promise],
      _poller: null,
      _bootstrapPoll: null
    }
  },
  callStatic: {
    'challange(address,bytes,bytes,bytes,uint256[2],uint256[2][2],uint256[2])': [Function (anonymous)],
    'collect(bytes32,uint256,uint256,address[],uint256[2],uint256[2][2],uint256[2])': [Function (anonymous)],
    'count()': [Function (anonymous)],
    'keys(address)': [Function (anonymous)],
    'nullifierRoot()': [Function (anonymous)],
    'registerVoter(bytes32)': [Function (anonymous)],
    'result()': [Function (anonymous)],
    challange: [Function (anonymous)],
    collect: [Function (anonymous)],
    count: [Function (anonymous)],
    keys: [Function (anonymous)],
    nullifierRoot: [Function (anonymous)],
    registerVoter: [Function (anonymous)],
    result: [Function (anonymous)]
  },
  estimateGas: {
    'challange(address,bytes,bytes,bytes,uint256[2],uint256[2][2],uint256[2])': [Function (anonymous)],
    'collect(bytes32,uint256,uint256,address[],uint256[2],uint256[2][2],uint256[2])': [Function (anonymous)],
    'count()': [Function (anonymous)],
    'keys(address)': [Function (anonymous)],
    'nullifierRoot()': [Function (anonymous)],
    'registerVoter(bytes32)': [Function (anonymous)],
    'result()': [Function (anonymous)],
    challange: [Function (anonymous)],
    collect: [Function (anonymous)],
    count: [Function (anonymous)],
    keys: [Function (anonymous)],
    nullifierRoot: [Function (anonymous)],
    registerVoter: [Function (anonymous)],
    result: [Function (anonymous)]
  },
  functions: {
    'challange(address,bytes,bytes,bytes,uint256[2],uint256[2][2],uint256[2])': [Function (anonymous)],
    'collect(bytes32,uint256,uint256,address[],uint256[2],uint256[2][2],uint256[2])': [Function (anonymous)],
    'count()': [Function (anonymous)],
    'keys(address)': [Function (anonymous)],
    'nullifierRoot()': [Function (anonymous)],
    'registerVoter(bytes32)': [Function (anonymous)],
    'result()': [Function (anonymous)],
    challange: [Function (anonymous)],
    collect: [Function (anonymous)],
    count: [Function (anonymous)],
    keys: [Function (anonymous)],
    nullifierRoot: [Function (anonymous)],
    registerVoter: [Function (anonymous)],
    result: [Function (anonymous)]
  },
  populateTransaction: {
    'challange(address,bytes,bytes,bytes,uint256[2],uint256[2][2],uint256[2])': [Function (anonymous)],
    'collect(bytes32,uint256,uint256,address[],uint256[2],uint256[2][2],uint256[2])': [Function (anonymous)],
    'count()': [Function (anonymous)],
    'keys(address)': [Function (anonymous)],
    'nullifierRoot()': [Function (anonymous)],
    'registerVoter(bytes32)': [Function (anonymous)],
    'result()': [Function (anonymous)],
    challange: [Function (anonymous)],
    collect: [Function (anonymous)],
    count: [Function (anonymous)],
    keys: [Function (anonymous)],
    nullifierRoot: [Function (anonymous)],
    registerVoter: [Function (anonymous)],
    result: [Function (anonymous)]
  },
  filters: {
    'Challanged()': [Function (anonymous)],
    'Voted(address[])': [Function (anonymous)],
    Challanged: [Function (anonymous)],
    Voted: [Function (anonymous)]
  },
  _runningEvents: {},
  _wrappedEmits: {},
  address: '0x2232f341295f12C648db83aBdaA7C2F35f939338',
  resolvedAddress: Promise { '0x2232f341295f12C648db83aBdaA7C2F35f939338' },
  'challange(address,bytes,bytes,bytes,uint256[2],uint256[2][2],uint256[2])': [Function (anonymous)],
  'collect(bytes32,uint256,uint256,address[],uint256[2],uint256[2][2],uint256[2])': [Function (anonymous)],
  'count()': [Function (anonymous)],
  'keys(address)': [Function (anonymous)],
  'nullifierRoot()': [Function (anonymous)],
  'registerVoter(bytes32)': [Function (anonymous)],
  'result()': [Function (anonymous)],
  challange: [Function (anonymous)],
  collect: [Function (anonymous)],
  count: [Function (anonymous)],
  keys: [Function (anonymous)],
  nullifierRoot: [Function (anonymous)],
  registerVoter: [Function (anonymous)],
  result: [Function (anonymous)],
  deployTransaction: {
    type: 2,
    chainId: 4,
    nonce: 107,
    maxPriorityFeePerGas: BigNumber { _hex: '0x3b9aca00', _isBigNumber: true },
    maxFeePerGas: BigNumber { _hex: '0x3b9aca10', _isBigNumber: true },
    gasPrice: null,
    gasLimit: BigNumber { _hex: '0x4caa32', _isBigNumber: true },
    to: null,
    value: BigNumber { _hex: '0x00', _isBigNumber: true },
    data: '0x60806040523480156200001157600080fd5b50604051620059803803806200598083398181016040528101906200003791906200022b565b6040516200004590620001d3565b604051809103906000f08015801562000062573d6000803e3d6000fd5b50600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604051620000b190620001e1565b604051809103906000f080158015620000ce573d6000803e3d6000fd5b50600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040516200011d90620001ef565b604051809103906000f0801580156200013a573d6000803e3d6000fd5b50600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160048190555080600581905550505050620002f3565b6119af806200198483390190565b6112ee806200333383390190565b61135f806200462183390190565b6000815190506200020e81620002bf565b92915050565b6000815190506200022581620002d9565b92915050565b6000806000606084860312156200024157600080fd5b60006200025186828701620001fd565b9350506020620002648682870162000214565b9250506040620002778682870162000214565b9150509250925092565b60006200028e8262000295565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b620002ca8162000281565b8114620002d657600080fd5b50565b620002e481620002b5565b8114620002f057600080fd5b50565b61168180620003036000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80634e49b53c1161005b5780634e49b53c146100d857806365372147146100f6578063670d14b214610114578063793c5d21146101445761007d565b806306661abd14610082578063147b0501146100a0578063489f2594146100bc575b600080fd5b61008a610160565b6040516100979190611315565b60405180910390f35b6100ba60048036038101906100b59190610a4a565b610166565b005b6100d660048036038101906100d19190610bad565b6103c1565b005b6100e0610732565b6040516100ed91906112ba565b60405180910390f35b6100fe610738565b60405161010b9190611315565b60405180910390f35b61012e60048036038101906101299190610a21565b61073e565b60405161013b91906112ba565b60405180910390f35b61015e60048036038101906101599190610b5b565b610756565b005b60025481565b6000600960008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000801b8114156101ba57600080fd5b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a63159ec8a600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166004546005548d8d8d6040518863ffffffff1660e01b81526004016102499796959493929190611184565b60206040518083038186803b15801561026157600080fd5b505afa158015610275573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102999190610c69565b9050600081146102a857600080fd5b6102b061079d565b604051806040016040528060005460001c81526020018460001c8152509050600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f5c9d69e878787856040518563ffffffff1660e01b81526004016103309493929190611273565b60206040518083038186803b15801561034857600080fd5b505afa15801561035c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103809190610b32565b61038957600080fd5b7f934a166b5d082757b291c3286f210ecd0170f23e74b77bb605b6d0ece35e0c8b60405160405180910390a150505050505050505050565b6000836000600281106103d057fe5b6020020135146106c85760608585905067ffffffffffffffff811180156103f657600080fd5b506040519080825280602002602001820160405280156104255781602001602082028036833780820191505090505b50905060005b87811015610511576009600088888481811061044357fe5b90506020020160208101906104589190610a21565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482828151811061049f57fe5b6020026020010181815250506000801b8282815181106104bb57fe5b60200260200101511415610504576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104fb906112f5565b60405180910390fd5b808060010191505061042b565b5060606000548a8a8a8560405160200161052f959493929190611112565b60405160208183030381529060405290506105486107bf565b60405180602001604052807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001600285604051610584919061116d565b602060405180830381855afa1580156105a1573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906105c49190610b84565b60001c816105ce57fe5b068152509050600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343753b4d878787856040518563ffffffff1660e01b8152600401610635949392919061122c565b60206040518083038186803b15801561064d57600080fd5b505afa158015610661573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106859190610b32565b6106c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106bb906112d5565b60405180910390fd5b5050505b8660016000828254019250508190555085600260008282540192505081905550876000819055507f73e411baaa1ee2d6dface0eba9648b9a0141daec205ae88c136ee15b024a78838585604051610720929190611208565b60405180910390a15050505050505050565b60005481565b60015481565b60096020528060005260406000206000915090505481565b80600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b6040518060400160405280600290602082028036833780820191505090505090565b6040518060200160405280600190602082028036833780820191505090505090565b6000813590506107f0816115ef565b92915050565b60008083601f84011261080857600080fd5b8235905067ffffffffffffffff81111561082157600080fd5b60208301915083602082028301111561083957600080fd5b9250929050565b60008190508260406002028201111561085857600080fd5b92915050565b600082601f83011261086f57600080fd5b600261088261087d8261135d565b611330565b9150818385604084028201111561089857600080fd5b60005b838110156108c857816108ae88826108f0565b84526020840193506040830192505060018101905061089b565b5050505092915050565b6000819050826020600202820111156108ea57600080fd5b92915050565b600082601f83011261090157600080fd5b600261091461090f8261137f565b611330565b9150818385602084028201111561092a57600080fd5b60005b8381101561095a578161094088826109f7565b84526020840193506020830192505060018101905061092d565b5050505092915050565b60008151905061097381611606565b92915050565b6000813590506109888161161d565b92915050565b60008151905061099d8161161d565b92915050565b600082601f8301126109b457600080fd5b81356109c76109c2826113a1565b611330565b915080825260208301602083018583830111156109e357600080fd5b6109ee838284611588565b50505092915050565b600081359050610a0681611634565b92915050565b600081519050610a1b81611634565b92915050565b600060208284031215610a3357600080fd5b6000610a41848285016107e1565b91505092915050565b6000806000806000806000610180888a031215610a6657600080fd5b6000610a748a828b016107e1565b975050602088013567ffffffffffffffff811115610a9157600080fd5b610a9d8a828b016109a3565b965050604088013567ffffffffffffffff811115610aba57600080fd5b610ac68a828b016109a3565b955050606088013567ffffffffffffffff811115610ae357600080fd5b610aef8a828b016109a3565b9450506080610b008a828b016108f0565b93505060c0610b118a828b0161085e565b925050610140610b238a828b016108f0565b91505092959891949750929550565b600060208284031215610b4457600080fd5b6000610b5284828501610964565b91505092915050565b600060208284031215610b6d57600080fd5b6000610b7b84828501610979565b91505092915050565b600060208284031215610b9657600080fd5b6000610ba48482850161098e565b91505092915050565b600080600080600080600080610180898b031215610bca57600080fd5b6000610bd88b828c01610979565b9850506020610be98b828c016109f7565b9750506040610bfa8b828c016109f7565b965050606089013567ffffffffffffffff811115610c1757600080fd5b610c238b828c016107f6565b95509550506080610c368b828c016108d2565b93505060c0610c478b828c01610840565b925050610140610c598b828c016108d2565b9150509295985092959890939650565b600060208284031215610c7b57600080fd5b6000610c8984828501610a0c565b91505092915050565b6000610c9e8383610d0a565b60208301905092915050565b6000610cb68383610ef0565b60408301905092915050565b6000610cce8383610f10565b60408301905092915050565b6000610ce68383610fcd565b60208301905092915050565b6000610cfe83836110dd565b60208301905092915050565b610d1381611536565b82525050565b610d2281611536565b82525050565b6000610d34838561149f565b9350610d3f826113cd565b8060005b85811015610d7857610d558284611514565b610d5f8882610c92565b9750610d6a83611451565b925050600181019050610d43565b5085925050509392505050565b610d8e8161140f565b610d9881846114b0565b9250610da3826113d7565b8060005b83811015610ddc57610db9828461152b565b610dc38782610caa565b9650610dce8361145e565b925050600181019050610da7565b505050505050565b610ded8161141a565b610df781846114b0565b9250610e02826113e1565b8060005b83811015610e33578151610e1a8782610cc2565b9650610e258361146b565b925050600181019050610e06565b505050505050565b6000610e4682611425565b610e5081856114bb565b9350610e5b836113eb565b8060005b83811015610e8c578151610e738882610cda565b9750610e7e83611478565b925050600181019050610e5f565b5085935050505092915050565b610ea281611430565b610eac81846114c6565b9250610eb7826113fb565b8060005b83811015610ee8578151610ecf8782610cf2565b9650610eda83611485565b925050600181019050610ebb565b505050505050565b610efc60408383611588565b5050565b610f0c60408383611588565b5050565b610f198161143b565b610f2381846114d1565b9250610f2e82611405565b8060005b83811015610f5f578151610f468782610cf2565b9650610f5183611492565b925050600181019050610f32565b505050505050565b610f708161143b565b610f7a81846114dc565b9250610f8582611405565b8060005b83811015610fb6578151610f9d8782610cf2565b9650610fa883611492565b925050600181019050610f89565b505050505050565b610fc781611554565b82525050565b610fd681611554565b82525050565b610fed610fe882611554565b6115ca565b82525050565b6000610ffe82611446565b61100881856114e7565b9350611018818560208601611597565b611021816115de565b840191505092915050565b600061103782611446565b61104181856114f8565b9350611051818560208601611597565b80840191505092915050565b600061106a600d83611503565b91507f696e76616c69642d70726f6f66000000000000000000'... 36018 more characters,
    accessList: [],
    hash: '0x0dba07d78ef94371136dc69cd583d8b0f0a434882a5a5e81299612d9f6115454',
    v: 0,
    r: '0xec0f82808b802a235ae298d0797ee408f75b6bc6ab822a1a92a0199588c6bcf9',
    s: '0x415a0fde3e6e8b4fce89c3c22e6f6896574765de22ceddb8e02be1251f9f9f1f',
    from: '0x3E311B4D335E3Dc1F820366c12C1baDD3e193E12',
    wait: [Function (anonymous)]
  }
}
